AWSTemplateFormatVersion: '2010-09-09'
Metadata: 
  License: Apache-2.0
Description: 'MySQL RDS Instance'
Parameters:
  DBInstanceIdentifier:
    Description: The database name
    Type: String
    Default: "ocean" 
  DBName:
    Description: The database name
    Type: String
    Default: "coldstorage"  
  DBUser:
    Description: The database admin account username
    Type: String
    Default: "dbattack"
  DBPassword:
    Description: The database admin account password
    Type: String
    Default: "cantcrackme"
  RDSPORT: 
    Description: "Custom MySQL Port"
    Type: String
    Default: "4306" 
  DBInstanceType:
    Description: Instace Type of DB Instance.
    Type: String
    Default: "db.t2.micro"
  DBVolumeSize:
    Description: Storage size of DB Instance.
    Type: String 
    Default: 10

  VPCID:
    Description: "ID of the VPC to build SG in"
    Type: String
  PrivateSubnet1:
    Description: "Subnet ID"
    Type: String   
  PrivateSubnet2:
    Description: "Subnet ID"
    Type: String
  RDSSecurityGroup:
    Description: "SecurityGroup ID"
    Type: String
  

Resources:
  RDSSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: MySQL RDS DB Subnet group
      DBSubnetGroupName: !Join [ "-", [  !Ref VPCID, "RDS-Subnet-Group" ] ]
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      Tags:
         - Key: Name
           Value: !Join [ "-", [  !Ref VPCID, "MySQLRDS-Subnet" ] ] 
          
  #RDSDBSG:  
  #  Type: "AWS::EC2::SecurityGroup"
  #  Properties:
  #    GroupDescription:  "RDS SG"
  #    VpcId: !Ref VPCID
  #    SecurityGroupIngress: 
  #       - IpProtocol: tcp
  #         CidrIp: !Ref SSInfraCIDR
  #         FromPort: !Ref RDSPORT
  #         ToPort: !Ref RDSPORT    
  #       - IpProtocol: tcp
  #         CidrIp: !Ref SharedServicesCIDR
  #         FromPort: !Ref RDSPORT
  #         ToPort: !Ref RDSPORT              
        
  MyRDSInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBName: !Ref 'DBName'
      AllocatedStorage: 10
      DBInstanceClass: !Ref DBInstanceType
      Engine: MySQL
      EngineVersion: 5.7.22
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      DBParameterGroupName: !Ref MyRDSParamGroup
      BackupRetentionPeriod: 7
      VPCSecurityGroups: 
      - !Ref RDSSecurityGroup 
      DBSubnetGroupName: !Ref RDSSubnetGroup
      MultiAZ: false
      Port: !Ref RDSPORT
      PubliclyAccessible: false
      StorageType: gp2
      StorageEncrypted: false 
      
  MyRDSParamGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Family: MySQL5.7
      Description: CloudFormation Sample Database Parameter Group
      Parameters:
        autocommit: '1'
        old_passwords: '0'
        max_allowed_packet: '1073741824'
        max_execution_time: '0'  
  #RDSFreeStorageAlarm:
  #  DependsOn: MyRDSInstance
  #  Type: AWS::CloudWatch::Alarm
  #  Properties:
  #    ActionsEnabled: true
  #    AlarmActions:
  #      - !Ref AlartNotificationTopicARN
  #    AlarmDescription: "RDS DB Low Freeable Space"
  #    AlarmName: RDSFreeStogareAlarm
  #    Dimensions:
  #       -
  #        Name: DBInstanceIdentifier
  #        Value:  !Ref MyRDSInstance       
  #    EvaluationPeriods: 2
  #    MetricName: FreeStorageSpace
  #    Namespace: AWS/RDS
  #    OKActions:
  #      - !Ref InfoNotificationTopicARN
  #    Period: 300
  #    Statistic: Average
  #    Threshold: 5368709120
  #    ComparisonOperator: LessThanOrEqualToThreshold

  
Outputs:
  RDSEndPoint:
    Description: ENdpoint string for the database
    Value: !GetAtt [MyRDSInstance, Endpoint.Address]